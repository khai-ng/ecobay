services:
    ##########################################
    ## Kafka
    ##########################################
    kafka-ui:
        ports:
            - 9080:8080
        environment:
            DYNAMIC_CONFIG_ENABLED: true
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
            # KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
            KAFKA_CLUSTERS_0_METRICS_PORT: 9991
            # KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry:8085
            # KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
            # KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083

    zookeeper:
        environment:
            - ZOOKEEPER_SERVER_ID=1
            - ZOOKEEPER_CLIENT_PORT=2181
            - ZOOKEEPER_TICK_TIMES=2000
            - ZOOKEEPER_SYNC_LIMIT=2
            # - KAFKA_OPTS=-Dzookeeper.4lw.commands.whitelist=ruok
        ports:
            - 2181:2181

    kafka:
        ports:
            - 9092:9092
            - 29092:29092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9991

    # schemaregistry:
    #     ports:
    #         - 8085:8085
    #     environment:
    #         SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    #         SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
    #         SCHEMA_REGISTRY_HOST_NAME: schemaregistry
    #         SCHEMA_REGISTRY_LISTENERS: http://schemaregistry:8085

    #         SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
    #         SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
    #         SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas

    # kafka-connect:
    #     ports:
    #         - 8083:8083
    #     environment:
    #         CONNECT_BOOTSTRAP_SERVERS: kafka:29092
    #         CONNECT_GROUP_ID: compose-connect-group
    #         CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
    #         CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
    #         CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
    #         CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
    #         CONNECT_STATUS_STORAGE_TOPIC: _connect_status
    #         CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    #         CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
    #         CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8085
    #         CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
    #         CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8085
    #         CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    #         CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    #         CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
    #         CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

    ##########################################
    ## Services
    ##########################################
    web-apigateway:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=8080
            # - Logging__Loglevel__Default=Debug
            # - Logging__Loglevel__Microsoft=Debug
            - Kestrel__Endpoints__HTTP__Url=http://0.0.0.0:80
            - Reverseproxy__Clusters__order__Destinations__default__Address=http://order-api
            - Reverseproxy__Clusters__product__Destinations__default__Address=http://product-api-1
            - Authentication__MetadataAddress=http://keycloak:8080/realms/ecobay/.well-known/openid-configuration
            - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
        ports:
            - "5100:80"

    pg-eventstore-db:
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_PASSWORD=1234
        ports:
            - "5432:5432"

    keycloak:
        environment:
            KC_BOOTSTRAP_ADMIN_USERNAME: admin
            KC_BOOTSTRAP_ADMIN_PASSWORD: 1234
            KC_DB: mysql
            KC_DB_URL_HOST: mysql-db
            KC_DB_SCHEMA: keycloak
            KC_DB_USERNAME: root
            KC_DB_PASSWORD: 1234
            KC_HOSTNAME_STRICT: "false"
            KC_PROXY: "edge"
        volumes:
            - ./configs/keycloak/:/opt/keycloak/data/import
        command:
            - start-dev
            #- --import-realm
        ports:
            - "5101:8080"

    mysql-db:
        environment:
            MYSQL_ROOT_PASSWORD: 1234
        volumes:
            - ./configs/keycloak/init-keycloak.sql:/docker-entrypoint-initdb.d/init-keycloak.sql
        ports:
            - "5199:3306"

    # Product
    product-api-1:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=8080
            - Kestrel__Endpoints__HTTP__Url=http://0.0.0.0:80
            - Mongo__Connection__ConnectionString=mongodb://router1:27017
            - Mongo__Connection__DatabaseName=ecobay
            - Kafka__Producer__ProducerConfig__BootstrapServers=kafka:29092
            - Kafka__Consumer__ConsumerConfig__BootstrapServers=kafka:29092
            - Authentication__MetadataAddress=http://keycloak:8080/realms/ecobay/.well-known/openid-configuration
            - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
        ports:
            - "5110:80"
    
    # Order
    order-api:
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTP_PORTS=8080
            - Logging__Loglevel__Default=Information
            - Logging__Loglevel__Microsoft=Warning
            - Kestrel__Endpoints__HTTP__Url=http://0.0.0.0:80
            - ConnectionStrings__Default=Server=mysql-db;Database=ecobay.order;User Id=root;Password=1234;
            - EventStore__ConnectionString=PORT=5432;HOST=pg-eventstore-db;TIMEOUT=15;POOLING=True;MINPOOLSIZE=1;MAXPOOLSIZE=100;COMMANDTIMEOUT=20;DATABASE='postgres';PASSWORD='1234';USER ID='postgres';
            - EventStore__WriteSchema=orders_write
            - Kafka__Producer__ProducerConfig__BootstrapServers=kafka:29092
            - Kafka__Consumer__ConsumerConfig__BootstrapServers=kafka:29092
            - Authentication__MetadataAddress=http://keycloak:8080/realms/ecobay/.well-known/openid-configuration
            - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
        ports:
            - "5010:80"

    configsvr1:
        command: mongod --port 27017 --configsvr --replSet config-server
        volumes:
            - ./configs/mongodb:/scripts 
        ports:
            - 27119:27017

    configsvr2:
        command: mongod --port 27017 --configsvr --replSet config-server
        ports:
            - 27120:27017

    shard1-1:
        command: mongod --replSet shard1rs --shardsvr --port 27017
        volumes:
            - ./configs/mongodb:/scripts
        ports:
            - 27020:27017

    shard1-2:
        command: mongod --replSet shard1rs --shardsvr --port 27017
        ports:
            - 27021:27017

    shard2-1:
        command: mongod --replSet shard2rs --shardsvr --port 27017
        volumes:
            - ./configs/mongodb:/scripts
        ports:
            - 27022:27017

    shard2-2:
        command: mongod --replSet shard2rs --shardsvr --port 27017
        ports:
            - 27023:27017

    router1:
        command: mongos --port 27017 --configdb config-server/configsvr1:27017,configsvr2:27017 --bind_ip_all
        volumes:
            - ./configs/mongodb:/scripts
        ports:
            - 27117:27017

    ##########################################
    ## Monitoring
    ##########################################
    fluent-bit:
        environment:
            # - FLB_ES_HOST=elasticsearch
            # - FLB_ES_PORT=9200
            - LOKI_HOST=loki
            - LOKI_PORT=3100
        volumes:
            - ./configs/fluent-bit:/fluent-bit/etc
        ports:
            - 24224:24224

    ## Fluent bit - Elasticsearch, Kibana
    # elasticsearch:
    #     mem_limit: 2g
    #     environment:
    #         - discovery.type=single-node
    #     ports:
    #         - 9200:9200
    #         - 9300:9300

    # kibana:
    #     environment:
    #         - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    #     ports:
    #         - 5601:5601
    
    # Fluent bit - Loki, Grafana
    loki:
        volumes:
            - ./configs/loki:/etc/loki
        command: "-config.file=/etc/loki/local-config.yaml"
        ports:
            - 3100:3100

    grafana:
        environment:
              - GF_SECURITY_ADMIN_USER=admin
              - GF_SECURITY_ADMIN_PASSWORD=1234
        volumes:
            - ./configs/grafana/provisioning/:/etc/grafana/provisioning/
        ports:
            - 3000:3000

    # Observer
    prometheus:
        volumes:
            - ./configs/prometheus:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        expose:
            - 9090

    nodeexporter:
        user: root
        privileged: true
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        expose:
            - 9100

    cadvisor:
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
            #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
        expose:
            - 8080

    # alertmanager:
    #     volumes:
    #         - .configs/alertmanager:/etc/alertmanager
    #     command:
    #         - '--config.file=/etc/alertmanager/config.yml'
    #         - '--storage.path=/alertmanager'
    #     expose:
    #         - 9093

    jaeger:
        ports:
            - "6831:6831/udp"
            - "4317:4317"
            - "4318:4318"
            - "16686:16686"
            - "14268:14268"
            - "14250:14250"